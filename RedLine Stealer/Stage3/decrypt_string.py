import base64
import re


def xor(string, key):
    xored_string = []
    
    for i in range(max(len(string), len(key))):
        xored_value = ord(string[i%len(string)]) ^ ord(key[i%len(key)])
        xored_string.append(chr(xored_value))
        
    return ''.join(xored_string)

def decode(encoded_string, key):
    # First Base64 decode
    decoded_bytes = base64.b64decode(encoded_string)
    decoded_string = str(decoded_bytes, 'latin-1')
    
    # Replace all no ascii with a '.'
    regex = re.sub(r"[^ -~]", '.', decoded_string)
    result = ''.join(regex)
    #print(result)
    
    # Xor
    xored_string = xor(result, key)
    print(xored_string)
    
    # Second Base64 decode
    decoded_bytes = base64.b64decode(xored_string)
    decoded_string = str(decoded_bytes, 'latin-1')
    
    regex = re.sub(r"[^ -~]", '.', decoded_string)
    result = ''.join(regex)
    
    print(result)
    
    #return decoded_string
    
if __name__ == "__main__":
    encoded_ip_string = "Hj0tHSAtXRsfKkAQIDowVR4tOVshFCRe"
    encoded_id_string = "NSEmHDY5ERU1LRNV"
    #encoded_message_string = ""
    xor_key = "Pythonic"

    decode(encoded_ip_string, xor_key)
    decode(encoded_id_string, xor_key)
    #print("IP: " + decode(encoded_ip_string, xor_key))
    #print("ID: " + decode(encoded_id_string, xor_key))
    #print("MESSAGE: " + decode(encoded_message_string, xor_key))